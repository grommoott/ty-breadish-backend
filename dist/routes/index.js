"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.apiRouter = void 0;
const express_1 = __importDefault(require("express"));
const register_1 = __importDefault(require("./register"));
const login_1 = __importDefault(require("./login"));
const products_1 = __importDefault(require("./products"));
const accessToken_1 = __importDefault(require("./accessToken"));
const comments_1 = __importDefault(require("./comments"));
const news_1 = __importDefault(require("./news"));
const likes_1 = __importDefault(require("./likes"));
const featured_1 = __importDefault(require("./featured"));
const reviews_1 = __importDefault(require("./reviews"));
const orders_1 = __importDefault(require("./orders"));
const verificationCode_1 = __importDefault(require("./verificationCode"));
const users_1 = __importDefault(require("./users"));
const yookassaWebhook_1 = __importDefault(require("./yookassaWebhook"));
const recipes_1 = __importDefault(require("./recipes"));
const images_1 = __importDefault(require("./images"));
const bakeries_1 = __importDefault(require("./bakeries"));
const _enums_1 = require("@enums");
const _middlewares_1 = require("@middlewares");
const maps_1 = __importDefault(require("./maps"));
const apiRouter = express_1.default.Router();
exports.apiRouter = apiRouter;
// Authorization & Authentication
apiRouter.post("/register", register_1.default.post);
apiRouter.post("/register/token", register_1.default.postToken);
apiRouter.post("/login", login_1.default.post);
apiRouter.post("/sendRecoveryPassword", login_1.default.recoveryPasswordPost);
apiRouter.post("/logout", login_1.default.postLogout);
apiRouter.get("/accessToken", accessToken_1.default.get);
apiRouter.post("/verificationCode/create", verificationCode_1.default.postCreate);
// Items
apiRouter.get("/products/id/:id", products_1.default.get);
apiRouter.get("/products/list", products_1.default.getList);
apiRouter.post("/products/create", products_1.default.postCreate);
apiRouter.delete("/products/id/:id", products_1.default.delete);
apiRouter.put("/products", products_1.default.put);
apiRouter.get("/products/images/id/:id", products_1.default.getImages);
apiRouter.get("/products/images/isExists/id/:id", products_1.default.getIsImageExists);
apiRouter.post("/products/images/create", products_1.default.postImages);
apiRouter.delete("/products/images/id/:id", products_1.default.deleteImages);
apiRouter.put("/products/images", products_1.default.putImages);
apiRouter.get("/recipes/id/:id", recipes_1.default.get);
apiRouter.get("/recipes/list", recipes_1.default.getList);
apiRouter.post("/recipes/create", recipes_1.default.postCreate);
apiRouter.delete("/recipes/id/:id", recipes_1.default.delete);
apiRouter.put("/recipes", recipes_1.default.put);
apiRouter.get("/recipes/images/id/:id", recipes_1.default.getImages);
apiRouter.get("/recipes/images/isExists/id/:id", recipes_1.default.getIsImageExists);
apiRouter.post("/recipes/images/create", recipes_1.default.postImages);
apiRouter.delete("/recipes/images/id/:id", recipes_1.default.deleteImages);
apiRouter.put("/recipes/images", recipes_1.default.putImages);
apiRouter.get("/featured", featured_1.default.get);
apiRouter.post("/featured/create", featured_1.default.postCreate);
apiRouter.delete("/featured/id/:id", featured_1.default.delete);
apiRouter.get("/reviews/target/:target/sortOrder/:sortOrder/page/:page", reviews_1.default.getPage);
apiRouter.get("/reviews/byItemUser/target/:target", reviews_1.default.getByItemUser);
apiRouter.post("/reviews/create", reviews_1.default.postCreate);
apiRouter.delete("/reviews/id/:id", reviews_1.default.delete);
apiRouter.put("/reviews", reviews_1.default.put);
// Media
apiRouter.get("/comments/target/:target/sortOrder/:sortOrder/page/:page", comments_1.default.getPage);
apiRouter.get("/comments/count/target/:target", comments_1.default.getCount);
apiRouter.post("/comments/create", comments_1.default.postCreate);
apiRouter.delete("/comments/id/:id", comments_1.default.delete);
apiRouter.put("/comments", comments_1.default.put);
apiRouter.get("/news/page/:page", news_1.default.getPage);
apiRouter.get("/news/id/:id", news_1.default.get);
apiRouter.post("/news/create", news_1.default.postCreate);
apiRouter.delete("/news/id/:id", news_1.default.delete);
apiRouter.put("/news", news_1.default.put);
apiRouter.get("/news/images/id/:id", news_1.default.getImages);
apiRouter.get("/news/images/isExists/id/:id", news_1.default.getIsImageExists);
apiRouter.post("/news/images/create", news_1.default.postImages);
apiRouter.delete("/news/images/id/:id", news_1.default.deleteImages);
apiRouter.put("/news/images", news_1.default.putImages);
apiRouter.get("/likes", likes_1.default.get);
apiRouter.get("/likes/count/target/:target/type/:type", likes_1.default.getCount);
apiRouter.post("/likes/create", likes_1.default.postCreate);
apiRouter.delete("/likes/id/:id", likes_1.default.delete);
// Order
apiRouter.get("orders/id/:id", orders_1.default.get);
apiRouter.get("/orders/list", orders_1.default.getList);
apiRouter.get("/orders/byBakeryId/id/:id", orders_1.default.getByBakeryId);
apiRouter.post("/orders/create", orders_1.default.postCreate);
apiRouter.delete("/orders/id/:id", orders_1.default.delete);
apiRouter.put("/orders/changeOrderState", orders_1.default.putChangeState);
apiRouter.post("/yookassaWebhook/4abad563-b0e3-4736-a9e6-9de220a43535", yookassaWebhook_1.default.post);
// User
apiRouter.get("/users/usernameAvailable/:username", users_1.default.getUsernameAvailable);
apiRouter.get("/users/emailAvailable/:email", users_1.default.getEmailAvailable);
apiRouter.get("/users/isPasswordIsValid/:password", users_1.default.getIsPasswordIsValid);
apiRouter.get("/users/username/id/:id", users_1.default.getUsername);
apiRouter.get("/users", users_1.default.get);
apiRouter.delete("/users/verificationCode/:verificationCode/password/:password", users_1.default.delete);
apiRouter.put("/users", users_1.default.put);
apiRouter.get("/users/avatars/id/:id", users_1.default.getAvatars);
apiRouter.get("/users/avatars/isExists/id/:id", users_1.default.getIsAvatarExists);
apiRouter.post("/users/avatars/create", users_1.default.postAvatars);
apiRouter.delete("/users/avatars", users_1.default.deleteAvatars);
apiRouter.put("/users/avatars", users_1.default.putAvatars);
// Images
apiRouter.get("/images/id/:id", images_1.default.get(_enums_1.ImageCategories.Images));
apiRouter.get("/images/isExists/id/:id", images_1.default.getIsExists(_enums_1.ImageCategories.Images));
apiRouter.post("/images/create", images_1.default.postCreateBasic);
apiRouter.delete("/images/id/:id", [_middlewares_1.checkAdmin, ...images_1.default.delete(_enums_1.ImageCategories.Images)]);
apiRouter.put("/images", [_middlewares_1.checkAdmin, ...images_1.default.put(_enums_1.ImageCategories.Images)]);
// Bakeries
apiRouter.get("/bakeries/id/:id", bakeries_1.default.get);
apiRouter.get("/bakeries/list", bakeries_1.default.getList);
apiRouter.post("/bakeries/create", bakeries_1.default.postCreate);
apiRouter.delete("/bakeries/id/:id", bakeries_1.default.delete);
apiRouter.put("/bakeries", bakeries_1.default.put);
// Maps
apiRouter.get("/maps/tiles/x/:x/y/:y/z/:z", maps_1.default.getTile);
apiRouter.get("/maps/geocoding/fromCoords/longitude/:longitude/latitude/:latitude", maps_1.default.getFromCoords);
apiRouter.get("/maps/geocoding/fromQuery/query/:query", maps_1.default.getFromQuery);
